{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","totalItems","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","ui","useEffect","a","fetchData","fetch","response","json","data","ok","Error","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94a354eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1mlhX\",\"details\":\"CartItem_details__1tZHj\",\"quantity\":\"CartItem_quantity__2nA7v\",\"price\":\"CartItem_price__1rpOr\",\"itemprice\":\"CartItem_itemprice__3_JK9\",\"actions\":\"CartItem_actions__2JWbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__3Y_W-\",\"price\":\"ProductItem_price__2BoNx\",\"actions\":\"ProductItem_actions__3VMxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2DA3q\",\"error\":\"Notification_error__3_8nL\",\"success\":\"Notification_success__lvIy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1Ms3B\",\"badge\":\"CartButton_badge__so6ad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1npml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3n3Ui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3nTJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__h_o8k\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart\",\r\n    initialState:{\r\n        items:[],\r\n        totalQuantity : 0,\r\n        changed:false\r\n    },\r\n    reducers:{\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity;\r\n            state.items=action.payload.items\r\n        },\r\n        addItemToCart(state,action){\r\n            const newItem=action.payload;\r\n            const existingItem = state.items.find(item=>item.id ==newItem.id)\r\n            state.totalQuantity++;\r\n            state.changed=true;\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id:newItem.id,\r\n                    price:newItem.price,\r\n                    quantity:1,\r\n                    totalPrice:newItem.price,\r\n                    name:newItem.title\r\n                })\r\n            }\r\n            else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state,action){\r\n            const id=action.payload;\r\n            const existingItem=state.items.find(item=>item.id===id);\r\n            state.totalQuantity--;\r\n            state.changed=true;\r\n            if(existingItem.quantity === 1){\r\n                state.items = state.items.filter(item=>item.id!==id);\r\n            }else{\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice=existingItem.totalPrice-existingItem.price\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const cartActions= cartSlice.actions\r\nexport default cartSlice","import classes from './CartItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nconst CartItem = (props) => {\n  \n  const dispatch = useDispatch();\n  const { title, quantity, total,price ,id} = props.item\n\n  const itemAddHandler = () =>{\n    dispatch(cartActions.addItemToCart({id,title,price}))\n  }\n  const itemRemoveHandler = () =>{\n    dispatch(cartActions.removeItemFromCart(id))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={itemRemoveHandler} >-</button>\n          <button onClick={itemAddHandler} >+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const cartItems = useSelector(state=>state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map(item=><CartItem key={item.id}\n         item = {{ id:item.id,title:item.name, quantity:item.quantity, total:item.totalPrice, price:item.price }}\n        />)}\n        \n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n    name:\"ui\",\r\n    initialState:{cartIsVisible:false, notification : null},\r\n    reducers:{\r\n        toggle(state){\r\n            state.cartIsVisible=!state.cartIsVisible\r\n        },\r\n        showNotification(state,action){\r\n            state.notification={\r\n                status:action.payload.status,\r\n                title : action.payload.title,\r\n                message:action.payload.message\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const uiActions= uiSlice.actions;\r\nexport default uiSlice;","import { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const totalItems = useSelector(state=>state.cart.totalQuantity);\n  const dispatch = useDispatch();\n\n  const btnClickHandler = () =>{\n    dispatch(uiActions.toggle());\n\n  }\n  \n  return (\n    <button className={classes.button} onClick={btnClickHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalItems}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, price, description,id} = props;\n\n\n  const addTOCartHandler = () =>{\n    dispatch(cartActions.addItemToCart({\n      id:id,\n      price:price,\n      title:title\n    }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addTOCartHandler} >Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n  {\n    id:'p1',\n    price:6,\n    title:'My First Book',\n    description : \"The first book i ever wrote\" \n  },\n  {\n    id:'p2',\n    price:5,\n    title:'My second Book',\n    description : \"I am inspired\" \n  }\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map(item=><ProductItem \n        key={item.id}\n        id={item.id}\n        title={item.title}\n        price={item.price}\n        description={item.description}/>)}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","  \r\nimport classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from \"./components/UI/Notification\";\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\n\nlet isInitial = true\n\nfunction App() {\n  const dispatch= useDispatch();\n  \n  const showCart = useSelector(state=>state.ui.cartIsVisible);\n  const cart=useSelector(state=>state.cart);\n  const notification = useSelector(state=>state.ui.notification)\n\n  useEffect(()=>{\n    dispatch(fetchCartData());\n  },[dispatch])\n\n  useEffect(()=>{\n\n    // const sendCartData = async () =>{\n    //   dispatch(uiActions.showNotification({\n    //     status:\"Pending\",\n    //     title:\"Pending\",\n    //     message:\"Sending cart data\"\n    //   }))\n    //   const response = await fetch(\"https://react-http-17270-default-rtdb.firebaseio.com/cart.json\",{\n    //   method:\"PUT\",\n    //   body:JSON.stringify(cart),\n    // })\n    // // const responseData = await response.json();\n\n    // if(!response.ok){\n      \n    //   throw new Error(\"Sending cart data failed\");\n      \n    // }\n    // dispatch(uiActions.showNotification({\n    //   status:\"Success\",\n    //   title:\"Success\",\n    //   message:\"Sent cart data\"\n    // }))\n\n    // };\n    if(isInitial){    // to avoid sending cart for the first time when app runs.\n      isInitial=false;\n      return;\n    }\n    \n    if(cart.changed){\n      dispatch(sendCartData(cart));\n    }\n    \n    \n    // sendCartData().catch((error=>{\n    //   dispatch(uiActions.showNotification({\n    //     status:\"Error\",\n    //     title:\"Error\",\n    //     message:\"Something went wrong.\"\n    //   }))\n    // }))\n\n    \n  },[cart,dispatch])\n\n  return (\n\n    <> \n    {notification && <Notification status={notification.status}\n        title={notification.title}\n        message={notification.message}/>}\n  \n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n    </>\n    \n  );\n}\n\nexport default App;\n","import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () =>{\r\n    return async dispatch=>{\r\n        const fetchData = async () =>{\r\n            const response = await fetch(\"https://react-http-17270-default-rtdb.firebaseio.com/cart.json\");\r\n            const data = await response.json();\r\n            if(!response.ok){\r\n                throw new Error(\"Could not fetch cart data\");\r\n                \r\n            }\r\n            return data;\r\n        }\r\n\r\n        try{\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart({\r\n                items:cartData.items || [],\r\n                totalQuantity : cartData.totalQuantity\r\n            }));\r\n        }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n                status:\"error\",\r\n                title:\"Error\",\r\n                message:\"Something went wrong.\"\r\n              }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart)=>{\r\n    return async (dispatch)=>{\r\n        dispatch(uiActions.showNotification({\r\n            status:\"Pending\",\r\n            title:\"Pending\",\r\n            message:\"Sending cart data\"\r\n          }));\r\n\r\n          const sendRequest = async () =>{\r\n            const response = await fetch(\"https://react-http-17270-default-rtdb.firebaseio.com/cart.json\",{\r\n                method:\"PUT\",\r\n                body:JSON.stringify({\r\n                    items:cart.items,\r\n                    totalQuantity:cart.totalQuantity\r\n                }),\r\n              })\r\n              // const responseData = await response.json();\r\n          \r\n              if(!response.ok){\r\n                \r\n                throw new Error(\"Sending cart data failed\");\r\n                \r\n              }\r\n          }\r\n\r\n          try{\r\n            await sendRequest();\r\n            dispatch(uiActions.showNotification({\r\n                status:\"success\",\r\n                title:\"Success\",\r\n                message:\"Sent cart data\"\r\n              }))\r\n          }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n                status:\"error\",\r\n                title:\"Error\",\r\n                message:\"Something went wrong.\"\r\n              }))\r\n          }\r\n\r\n    }\r\n}","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"./cart-slice\";\r\nimport uiSlice from \"./ui-slice\";\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{ui:uiSlice.reducer,cart:cartSlice.reducer}\r\n})\r\n\r\n\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render( <Provider store={store} ><App /></Provider> , document.getElementById('root'));\n"],"sourceRoot":""}